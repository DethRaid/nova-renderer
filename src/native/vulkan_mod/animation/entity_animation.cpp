// FILE: C:/Users/David/Documents/MC/force-src/src/main/native/vulkan_mod/animation/entity_animation.cpp

#include "entity_animation.h"

namespace vulkan_mod {
namespace animation {


    /** 
     *  Represents an entity model.
     *  
     *  An entity model has a vertex buffer, a skeleton, and some animation data. The skeleton doesn't actually exist, I just say it does so my head doesn't get in a knot. The skeleton is actually just the animation data, and the animation data is a list of mat4s 
     */


    // Operations


/** 
     *  Gets the animation start time from the time instance and marks this animation as running maybe?
     */
void entity_animation::start_animation()
// don't delete the following line as it's needed to preserve source code of this autogenerated element
// section -64--88-1-3-626d7542:152506aa714:-8000:0000000000000BB8 begin
{
}
// section -64--88-1-3-626d7542:152506aa714:-8000:0000000000000BB8 end
// don't delete the previous line as it's needed to preserve source code of this autogenerated element


/** 
     *  Returns the pose at this time
     *  
     *  Binary searches through the animation frames to get the frame just before and just after the current time. Sends both those to the GPU. The animation shader will blend between those two poses based on the current time.
     *  
     *  The first thing in the returned pair is the previous pose, the second thing is the next pose.
     *  
     *  If the animation should loop, then when this method gets beyond the last frame it'll actually return the first frame, offset by the time of the animation. It does the offset by adding the animation's time to the begin_time variable. The begin_time is always added to the frames of returned animatino frames.
     */
std::pair<animation_frame, animation_frame> entity_animation::get_cur_pose()
// don't delete the following line as it's needed to preserve source code of this autogenerated element
// section -64--88-1-3-626d7542:152506aa714:-8000:0000000000000BD3 begin
{
}
// section -64--88-1-3-626d7542:152506aa714:-8000:0000000000000BD3 end
// don't delete the previous line as it's needed to preserve source code of this autogenerated element


/** 
     *  Loads this animation from whatever file location I put animations in
     */
void entity_animation::load_from_resource(void  resource)
// don't delete the following line as it's needed to preserve source code of this autogenerated element
// section -64--88-1-3-626d7542:152506aa714:-8000:0000000000000BE5 begin
{
}
// section -64--88-1-3-626d7542:152506aa714:-8000:0000000000000BE5 end
// don't delete the previous line as it's needed to preserve source code of this autogenerated element

entity_animation::entity_animation(void  resource_location, animation_looping_behavior looping_behavior)
// don't delete the following line as it's needed to preserve source code of this autogenerated element
// section -64--88-1-3-626d7542:152506aa714:-8000:0000000000000BEC begin
{
}
// section -64--88-1-3-626d7542:152506aa714:-8000:0000000000000BEC end
// don't delete the previous line as it's needed to preserve source code of this autogenerated element


/** 
     *  Tells this animation to no longer run
     */
void entity_animation::end_animation()
// don't delete the following line as it's needed to preserve source code of this autogenerated element
// section -64--88-1-3-626d7542:152506aa714:-8000:0000000000000BF0 begin
{
}
// section -64--88-1-3-626d7542:152506aa714:-8000:0000000000000BF0 end
// don't delete the previous line as it's needed to preserve source code of this autogenerated element

} /* End of namespace vulkan_mod::animation */
} /* End of namespace vulkan_mod */
